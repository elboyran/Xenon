// Build file which can only run when dependencies and plugins have been downloaded.

//    PLUGINS
// ==============
plugins {
    // Changes in the plugins section should be also be applied to build.offline.gradle
    id 'java'
    id 'distribution'
    // publishing
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7.3'
    // ide
    id 'idea'
    id 'eclipse'
    // code coverage
    id 'jacoco'
    // quality
    // id 'pmd'
    // release
    // id 'org.ajoberstar.grgit' version '1.3.2'
    // id 'org.ajoberstar.github-pages' version '1.3.2'
    // license
    id 'com.github.hierynomus.license' version '0.14.0'
    // test sets
    id 'org.unbroken-dome.test-sets' version '1.4.2'
}

apply from: 'gradle/common.gradle'
apply from: 'gradle/test.gradle'
apply from: 'gradle/codestyle.gradle'
apply from: 'gradle/release.gradle'
apply from: 'gradle/license.gradle'

//  DEPENDENCIES
// ==============

// Online dependencies
repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/palantir/releases' // docker-compose-rule is published on bintray
    }
}

ext.sshjVersion = '0.21.1'
ext.jschVersion = '0.1.53'
ext.jschAgentproxyVersion = '0.0.9'
ext.apacheCommonsNetVersion = '3.3'

dependencies {
    // Xenon dependencies.
    // xenon/lib/**/*.jar to ./lib/
//    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.8.0'
//    compile group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.8.0'
    compile group: 'org.apache.jclouds', name: 'jclouds-all', version: '2.0.1'
//    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.154'

    compile group: 'org.apache.sshd', name: 'sshd-core', version: '1.4.0'
    compile group: 'commons-net', name: 'commons-net', version: apacheCommonsNetVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    compile group: 'org.apache.jackrabbit', name: 'jackrabbit-webdav', version: '2.14.2'
    compile group: 'joda-time', name: 'joda-time', version: '2.8.1'

    // Runtime dependencies
    runtime group: 'ch.qos.logback', name: 'logback-core', version: '1.0.11'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.11'

    // Testing dependencies
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'

    integrationTestCompile 'com.palantir.docker.compose:docker-compose-rule-junit4:0.32.0'
    // allow isolated and live tests to import from integration test,
    // so abstract test classes and docker compose files can be extended and reused
    fixedClientEnvironmentTestCompile sourceSets.integrationTest.output
    liveTestCompile sourceSets.integrationTest.output
    // TODO isolatedTest should have same dependencies as integrationTest,
    // do no copy deps but append integrationTest.deps to fixedClientEnvironmentTest.deps
    fixedClientEnvironmentTestCompile 'com.palantir.docker.compose:docker-compose-rule-junit4:0.32.0'
}

task downloadCompileDependencies(type: Copy) {
    from configurations.compile.files
    into compileLibDir
}

task downloadTestDependencies(type: Copy) {
    from (configurations.testCompile.files - configurations.compile.files)
    into testLibDir
}

task downloadRuntimeDependencies(type: Copy) {
    from (configurations.runtime.files - configurations.compile.files)
    into runtimeLibDir
}

/*
task downloadCodestyleDependencies(type: Copy) {
    from configurations.pmd.files
    into codestyleLibDir
}
*/

task downloadDependencies(dependsOn: [
        downloadCompileDependencies,
        downloadTestDependencies,
        downloadRuntimeDependencies,
//        downloadCodestyleDependencies
    ]) {
    description "download all Java dependencies, as resolved by gradle, into the lib directory"
}
